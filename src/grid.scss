@import "variables";

.grid {
  display: grid;
}

// for grid template columns
@for $i from 1 through $grid-columns {
  .grid-cols-#{$i} {
    grid-template-columns: repeat($i, minmax(0, 1fr));
  }
}

// for grid column span
@for $i from 1 through $grid-columns {
  .col-span-#{$i} {
    grid-column: span $i #{'/'} span $i;
  }
}

// for grid column start
.col-start-auto {
  grid-column-start: auto;
}

@for $i from 1 through $grid-columns {
  .col-start-#{$i} {
    grid-column-start: $i;
  }
}

// for grid column end
.col-end-auto {
  grid-column-start: auto;
}

@for $i from 1 through $grid-columns {
  .col-end-#{$i} {
    grid-column-end: $i;
  }
}


// for grid template rows
.grid-rows-none {
  grid-template-rows: none;
}

@for $i from 1 through $grid-rows {
  .grid-rows-#{$i} {
    grid-template-rows: repeat($i, minmax(0, 1fr));
  }
}


// for grid row span
.row-auto {
  grid-row: auto;
}

@for $i from 1 through $grid-rows {
  .row-span-#{$i} {
    grid-row: span $i #{'/'} span $i;
  }
}

// for grid column start
.row-start-auto {
  grid-row-start: auto;
}

@for $i from 1 through $grid-rows {
  .row-start-#{$i} {
    grid-row-start: $i;
  }
}

// for grid column end
.row-end-auto {
  grid-row-start: auto;
}

@for $i from 1 through $grid-rows {
  .row-end-#{$i} {
    grid-row-end: $i;
  }
}



// for grid gap
$utilities: (
        "gap" : (
                property: gap,
                class: gap,
                value: $gaps,
                unit: rem
        ),
        "row-gap" : (
                property: row-gap,
                class: gap-y,
                value: $gaps,
                unit: rem
        ),
        "column-gap" : (
                property: column-gap,
                class: gap-x,
                value: $gaps,
                unit: rem
        )
);

@each $utility_property, $utility_value in $utilities {
  $values : map-get($utility_value, value);
  $class : map-get($utility_value, class);

  @each $key, $value in $values {
    .#{$class}-#{$key} {
      #{$utility_property} : $value
    }
  }
}
